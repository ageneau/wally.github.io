{"version":3,"sources":["cljs_web3/net.cljs"],"mappings":";;;AAIA;;;;;;;;;;;;;;;AAAKA,AAeH,AAAA,AAAA,AAACC;AAGH;;;;;;;;;;AAAKC,AASH,AAAA,AAAA,AAACD","names":["cljs-web3.net/listening?","cljs_web3.utils.prop_or_clb_fn.cljs$core$IFn$_invoke$arity$variadic","cljs-web3.net/peer-count"],"sourcesContent":["(ns cljs-web3.net\n  (:require [cljs-web3.utils :as u]))\n\n\n(def listening?\n\n  \"This property is read only and says whether the node is actively\n  listening for network connections or not.\n\n  Parameters:\n  callback - callback with two parameters: error and result\n\n  Returns true if the client is actively listening for network connections,\n  otherwise false.\n\n  Example:\n  user> `(listening? (fn [err res] (when-not err (println res))))`\n  nil\n  user> true\"\n  (u/prop-or-clb-fn \"net\" \"listening\"))\n\n\n(def peer-count\n  \"This property is read only and returns the number of connected peers.\n\n  Returns the number of peers currently connected to the client.\n\n  Example:\n  user> `(peer-count (fn [err res] (when-not err (println res))))`\n  nil\n  user> 4\"\n  (u/prop-or-clb-fn \"net\" \"peerCount\"))\n"]}